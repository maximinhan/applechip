apply plugin: 'war' apply plugin: 'tomcat' apply plugin: 'cargo' 
// tomcat과 cargo plugin에 대한 repository 설정입니다. 
buildscript { repositories { mavenCentral() jcenter() } 
dependencies { classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.0' classpath 'org.gradle.api.plugins:gradle-cargo-plugin:1.4' } }


 dependencies { // tomcat plugin 설정입니다. 
 String tomcatVersion = '7.0.47' 
 tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}" 
 tomcat "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}" 
 tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") { 
 exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj' 
 } 
 providedCompile 'javax.servlet:javax.servlet-api:3.1.0' 
 providedCompile 'javax.websocket:javax.websocket-api:1.0' 
 providedCompile 'javax.servlet:jsp-api:2.0'
  providedCompile "org.apache.tomcat:tomcat-servlet-api:${tomcatVersion}" 
  
  // cargo에 대한 설정입니다. 
  def cargoVersion = '1.4.5' 
  cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion", "org.codehaus.cargo:cargo-ant:$cargoVersion" 
  def springVersion = "4.0.1.RELEASE" 
  compile "org.springframework:spring-webmvc:${springVersion}" 
  compile 'jstl:jstl:1.2' 
  compile 'org.apache.tiles:tiles-jsp:3.0.3' 
  compile 'org.slf4j:slf4j-api:1.7.6' 
  compile 'org.slf4j:jcl-over-slf4j:1.7.6' 
  compile 'ch.qos.logback:logback-classic:1.0.13' 
  compile 'ch.qos.logback:logback-core:1.0.13' 
  compile 'org.apache.velocity:velocity:1.7' 
  compile 'org.freemarker:freemarker:2.3.20' 
  compile 'com.ctlok:spring-webmvc-rythm:1.4.4' 
  compile project(':bookstoreHibernate') } // tomcarRun을 실행시키기 위해서 war에 대한 dependency를 주입합니다. 
  tomcatRun { contextPath = "" URIEncoding = 'UTF-8' dependsOn war } 
  tomcatRunWar { dependsOn war } // cargo를 이용한 배포를 위해서 war에 대한 dependency를 주입합니다. 
  cargoRedeployRemote { dependsOn war } 
  cargoDeployRemote { dependsOn war } 
  cargo { 
  containerId = 'tomcat7x' 
  port = 8080 
  deployable { 
  context = "${project.name}"
   }
   
    // remoteDeploy 되는 target의 tomcat 정보 
    remote { 
    hostname = '192.168.13.209' 
    username = 'ykyoon' 
    password = 'qwer12#$' 
    } 
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    apply plugin: 'war'

configurations { jetty9 }

dependencies.jetty9 'org.eclipse.jetty:jetty-ant:9.0.2.v20130417'

ant {
	taskdef(name: 'jettyRun', classname: 'org.eclipse.jetty.ant.JettyRunTask', classpath: configurations.jetty9.asPath)
	taskdef(name: 'jettyStop', classname: 'org.eclipse.jetty.ant.JettyStopTask', classpath: configurations.jetty9.asPath)
}

def config = [
	contextPath : '/',
	port : 8080,
	stopPort : 9999,
	stopKey : 9999
]

[
	task(jettyRun) << {
		ant.jettyRun(jettyPort: config.port, scanIntervalSeconds: 3) {
			webApp(war: webAppDir, contextPath: config.contextPath, extraClasspath: configurations.compile.asPath)
		}
	},
	task(jettyRunWar(dependsOn: war)) << {
		ant.jettyRun(jettyPort: config.port) {
			webApp(war: war.archivePath, contextPath: config.contextPath)
		}
	},
	task (jettyStart(dependsOn: war)) << {
		ant.jettyRun(daemon: true, jettyPort: config.port, stopPort: config.stopPort, stopKey: config.stopKey) {
			webApp(war: war.archivePath, contextPath: config.contextPath)
		}
	},
	task(jettyStop) << {
		ant.jettyStop(stopWait: 1, stopPort: config.stopPort, stopKey: config.stopKey)
	}
].each { it.group = 'jetty9' }


stopPort = 9123
stopKey = "jjj" //whatever you prefere
//Stops the jetty Instace when restarting (instance has to be stopped manually otherwise, with jettyStop)
jettyRun, jettyRunWar]*.daemon = true
[jettyRun, jettyRunWar].each { jetty ->
    jetty.dependsOn jettyStop
}

jettyRunWar.stopPort = 8090
jettyRunWar.stopKey = 'stopKey'
jettyStop.stopPort = 8090
jettyStop.stopKey = 'stopKey'



GRADLE_OPTS='-XX:MaxPermSize=256M -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4001'
gradle jettyRun
org.gradle.jvmargs=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=5005,suspend=y
GRADLE_OPTS="-Xdebug -Xrunjdwp:transport=dt_socket,address=9999,suspend=y,server=y"
gradle jettyRun
GRADLE_OPTS='-Xdebug -Xrunjdwp:transport=dt_socket,address=9999,server=y,suspend=n'
gradle jettyRun
GRADLE_OPTS="-Xdebug -Xrunjdwp:transport=dt_socket,address=9999,server=y,suspend=n"
gradle jettyRun
